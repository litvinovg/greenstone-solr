<?xml version="1.0"?>
<project name="gs3-solr-ext" default="usage" basedir=".">

  <!-- DIRECTORY LOCATIONS -->
  <!-- local ext paths -->
  <property name="src.home" value="${basedir}/src/java"/>
  <property name="build.home" value="${basedir}/build"/>
  <available property="ext.web.exists" file="${basedir}/web" type="dir" />

  <!-- greenstone3 paths -->
  <!-- http://stackoverflow.com/questions/3136849/how-do-i-convert-a-relative-path-in-ant-to-an-absolute-path 
    http://stackoverflow.com/questions/8295860/pathconvert-with-relative-file-names -->
  <property name="web.home" location="${basedir}/../../web"/> <!-- location property creates an absolute path -->
  <property name="localsite.collectdir" value="${web.home}/sites/localsite/collect"/>
  <property name="web.classesdir" value="${web.home}/WEB-INF/classes"/>
  <property name="web.libdir" value="${web.home}/WEB-INF/lib"/>  
  <property name="web.extdir" value="${web.home}/ext/solr"/>

  <property name="tomcat.dir" location="${basedir}/../../packages/tomcat"/> <!-- location property creates an absolute path -->
  <property name="tomcat.lib.dir" value="${tomcat.dir}/lib"/>
  <property name="tomcat.context.dir" value="${tomcat.dir}/conf/Catalina/localhost"/>

  <path id="compile.classpath">
    <!-- gs3 jar files we need -->
    <pathelement location="${web.libdir}/gsdl3.jar"/>
    <pathelement location="${web.libdir}/gutil.jar"/>
    <pathelement location="${web.libdir}/LuceneWrapper4.jar"/>
    <pathelement location="${web.libdir}/gson-1.7.1.jar"/>
    <!-- local jar files -->
    <fileset dir="lib/java">
      <include name="*.jar"/>
    </fileset>
    <pathelement location="lib/servlet-api-3.0.jar"/>
  </path>


  <!-- FILE LISTINGS.-->
  <!-- Created as property elements rather than as filelist elements, since
	they can then be reused for the add-service and delete-service targets. -->
  <property name="jars" 
		value="solr-core-4.7.2.jar
		solr-solrj-4.7.2.jar
		lucene-core-4.7.2.jar
		lucene-analyzers-common-4.7.2.jar
		lucene-analyzers-kuromoji-4.7.2.jar
		lucene-analyzers-phonetic-4.7.2.jar
		lucene-grouping-4.7.2.jar
		lucene-highlighter-4.7.2.jar
		lucene-queries-4.7.2.jar
		lucene-queryparser-4.7.2.jar
		lucene-memory-4.7.2.jar
		lucene-misc-4.7.2.jar
		lucene-spatial-4.7.2.jar
		lucene-suggest-4.7.2.jar
		httpclient-4.3.1.jar
		httpcore-4.3.jar
		httpmime-4.3.1.jar
		commons-fileupload-1.2.1.jar
		commons-io-2.1.jar
		commons-lang-2.6.jar
		velocity-1.6.1.jar
		log4j-over-slf4j-1.6.6.jar
		slf4j-api-1.6.6.jar
		slf4j-jdk14-1.6.6.jar
		spatial4j-0.4.1.jar
		zookeeper-3.4.5.jar
		guava-14.0.1.jar
		noggit-0.5.jar"/>
<!-- 		jcl-over-slf4j-1.6.6.jar
		jul-to-slf4j-1.6.6.jar
		log4j-1.2.16.jar
		wstx-asl-3.2.7.jar
-->
<!-- 
   lucene-spellchecker-3.3.0.jar replaced with lucene-suggest-4.7.2.jar, since both contain packages org/.../spell and org/.../suggest 
   
   commons-fileupload-1.2.1.jar - in solr war file
   velocity-1.6.1.jar
   log4j-over-slf4j-1.6.1.jar - have to download slf4j jar file for version 1.6.6 
   slf4j-jdk14-1.6.1.jar - have to download slf4j jar file for version 1.6.6 
  -->

  <property name="shared-xalan-jars"
	    value="xalan.jar
		   xercesImpl.jar
		   xml-apis.jar
		   xsltc.jar
		   serializer.jar"/>

  <property name="java-service-files" 
    value="SolrSearch.java		   	
    GS2SolrSearch.java
    GS2SolrRetrieve.java"/>  
		   
  <property name="java-util-files" 
    value="SolrFacetWrapper.java
    SolrQueryWrapper.java			
    SolrQueryResult.java"/>  		   
  
 <property name="property-files" 
    value="GS2SolrSearch.properties"/>  

			
  <!-- TARGETS -->
  <target name="usage" description="Print a help message">
    <echo message="  Execute 'ant -projecthelp' for a list of targets."/>
    <echo message="  Execute 'ant -help' for Ant help."/>
    <echo>To install the Solr extension for Greenstone3, run 'ant add-service'.
	To remove the files and folders installed by add-service, run 'ant del-service'.
    </echo>
  </target>			
  
  <target name="compile" description="Compile up the solr java classes, jar them up, and install gs3-solr.jar into Greenstone's web/WEB-INF/lib dir">
    <mkdir dir="${build.home}"/>
    <javac srcdir="${src.home}" destdir="${build.home}" debug="true">
      <classpath>
	<path refid="compile.classpath"/>
      </classpath>
    </javac>
    <jar destfile="${build.home}/gs3-solr.jar">
      <fileset dir="${build.home}">
        <include name="org/greenstone/gsdl3/**"/>
      </fileset>
      <manifest>
        <attribute name="Built-By" value="${user.name}" />
      </manifest>
    </jar>
    <copy file="${build.home}/gs3-solr.jar" todir="${web.libdir}"/>
  </target>
  
  <target name="copy-files" description="Helper-target: copy files across for add-service target">
  	
    <echo/>
	<echo>Adding to gsdl3 properties area: properties/${property-files}</echo>
	<copy todir="${web.classesdir}">
          <filelist id="prop-files" dir="properties" files="${property-files}"/>
	</copy>
	<echo/>
	<echo>Adding to gsdl3 web jar lib directory: ${basedir}/lib/java's ${jars}</echo>
	<copy todir="${web.libdir}">
          <filelist id="jar-files" dir="lib/java" files="${jars}"/>
	</copy>	
	
	<echo/>
	<echo>Creating web extension directory: ${web.extdir}</echo>
	<mkdir dir="${web.extdir}"/>
	
	<echo/>
	<echo>Adding to gsdl3 web solr ext directory: solr.xml and solr.xml.in</echo>
	<copy file="solr.xml.in" tofile="${web.extdir}/solr.xml.in"/>
	<pathconvert targetos="unix" property="src.gsdl3.home.unix">
	  <path path="../../web"/>
	</pathconvert>
	<filter token="gsdl3home" value="${src.gsdl3.home.unix}"/>
	<copy file="solr.xml.in" tofile="${web.extdir}/solr.xml" filtering="true" overwrite="true"/>
	
	<echo/>
	<echo>Adding example solr-jdbm-demo collection to ${localsite.collectdir}</echo>
	<copy todir="${localsite.collectdir}/solr-jdbm-demo"
	      preservelastmodified="true"
	      failonerror="true" >  
	  <fileset dir="${basedir}/collect/solr-jdbm-demo" includes="**"/>  
	</copy>
    <echo>Unzipping pre-built index</echo>
    <unzip dest="${localsite.collectdir}/solr-jdbm-demo" src="${localsite.collectdir}/solr-jdbm-demo/index.zip" />
  </target>

  <!-- Setting up solr to work with tomcat server instead of jetty server -->
  <target name="solr-for-tomcat" description="Helper-target: setting up solr to work tomcat">
    
    <echo>Copying solr jars needed for running solr with tomcat: ${basedir}/lib/ext</echo>	
    <copy todir="${tomcat.lib.dir}">	  
      <fileset dir="lib/ext">
	<include name="*.jar"/>
      </fileset>
    </copy>
    
    <!-- slf4j and commons logging bridge needed to avoid exception about incompatibility in tomcat log files-->
    <echo>Copying ${basedir}/lib/ext/jcl-over-slf4j-1.6.6.jar again to ${web.libdir}</echo>
    <copy todir="${web.libdir}">
      <filelist id="logging-bridge" dir="lib/ext" files="jcl-over-slf4j-1.6.6.jar"/>
    </copy>
    
    <echo>Copying ${basedir}/webapps/solr.war to ${tomcat.dir}/webapps</echo>
    <copy todir="${tomcat.dir}/webapps" file="webapps/solr.war" />
	<unwar src="${tomcat.dir}/webapps/solr.war" dest="${tomcat.dir}/webapps/solr"/>
	<echo>Copying xalan related jar files from  ${web.libdir} into ${tomcat.dir}/webapps/solr.war</echo>
    <copy todir="${tomcat.dir}/webapps/solr/WEB-INF/lib">
      <filelist dir="${web.libdir}" files="${shared-xalan-jars}" />
    </copy>
	<jar destfile="${tomcat.dir}/webapps/solr.war" basedir="${tomcat.dir}/webapps/solr" />
	<!-- delete the webapps\solr temporary dir: tomcat will unpack the modified war file on startup-->
	<delete failonerror="true" dir="${tomcat.dir}/webapps/solr" />
	
    <echo>Generating solr context file in ${tomcat.context.dir}</echo>
    
    <!-- we want unix paths (forward slashes) in the tomcat context file -->
    <pathconvert targetos="unix" property="gsdl3.web.home">
      <path path="${web.home}"/><!-- creates an absolute path-->
    </pathconvert>
    <pathconvert targetos="unix" property="tomcat.home">
      <path path="${tomcat.dir}"/><!-- creates an absolute path-->
    </pathconvert>
    <filter token="gsdl3home" value="${gsdl3.web.home}"/>
    <filter token="tomcathome" value="${tomcat.home}"/>
    <copy file="solr-tomcat-context.xml.in" tofile="${tomcat.context.dir}/solr.xml" filtering="true" overwrite="true"/>

  </target>  

  <!-- copy the content of the web folder (avoiding the top-level .svn directory) -->
  <target name="copy-solr-web" if="ext.web.exists">
    <echo/>
    <echo>Copy to gsdl3 web: the content of the ${basedir}/web folder (excluding .svn)</echo>
    <copy todir="${web.extdir}">
      <dirset dir="${basedir}/web">
	<exclude name=".svn"/>
      </dirset> 
    </copy>
  </target>


  <target name="add-service" depends="copy-solr-web,copy-files,solr-for-tomcat,compile" description="Run this target to setup the Solr extension for Greenstone3" />
  
  <target name="del-service" depends="del-files,del-solr-for-tomcat"
	description="Run this target to unset the Solr extension for Greenstone3" />


  <target name="del-files" description="Helper-target to delete files for del-service target">
	<!-- failonerror is set to false in case some files don't exist 
	and can't be deleted therefore -->

	<echo/>
	<echo>Removing from gsdl3 properties area: properties/${property-files}</echo>
	<delete failonerror="false">
          <filelist dir="${web.classesdir}" files="${property-files}"/>
	</delete>

	<echo/>
	<echo>Removing from gsdl3 web jar lib directory: ${basedir}/lib/java's ${jars} gs3-solr.jar</echo>
	<delete failonerror="false">
          <filelist dir="${web.libdir}" files="${jars} gs3-solr.jar"/>
	</delete>	
	
	<echo/>
	<echo>Removing web solr extension directory: ${web.extdir}</echo>
	<delete failonerror="false" includeEmptyDirs="true" dir="${web.extdir}"/>	

	<echo/>
	<echo>Removing solr-jdbm-demo collection from: ${localsite.collectdir}</echo>
	<delete failonerror="false" includeEmptyDirs="true" dir="${localsite.collectcdir}/solr-jdbm-demo"/>

  </target>
  
  <target name="del-solr-for-tomcat" description="Helper-target to remove files for getting solr to work with tomcat">

	<echo/>
	<echo>Removing solr modifications to tomcat: context file, solr.war and deployed version, jar files</echo>

	<!-- Actually need to ensure tomcat is not running at this point
	     But if solr.war is deleted first, it can't be re-deployed when deleting the solr folder subsequently
	  -->
	<delete failonerror="false" file="${tomcat.dir}/webapps/solr.war"/>
	<delete failonerror="false" includeEmptyDirs="true" dir="${tomcat.dir}/webapps/solr"/>

	<delete failonerror="false" file="${tomcat.context.dir}/solr.xml"/>

	<!-- delete all the jar files in tomcat/lib that were copied from ext/solr/lib/ext
	     which are all the jar files that are present in both tomcat/lib and ext/solr/lib/ext
	     https://ant.apache.org/manual/Types/selectors.html#presentselect -->
	<delete failonerror="false">	  
	  <fileset dir="${tomcat.lib.dir}" includes="**/*.jar">	    
	    <present present="both" targetdir="lib/ext"/>
	  </fileset>
	</delete>

	<!-- remove logging bridge jar file that was added into greenstone 3 web lib area -->
	<delete failonerror="false" file="${web.libdir}/jcl-over-slf4j-1.6.6.jar"/>

	<!--http://stackoverflow.com/questions/2140637/how-do-i-build-a-list-of-file-names-->
  </target>
  
</project>
